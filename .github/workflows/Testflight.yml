name: Testflight

on:
  push:
    tags:
        - '*'

jobs:
  deploy:
    runs-on: macos-latest
    env:
      XC_WORKSPACE: ${{ 'XQUARE-Workspace.xcworkspace' }}
      XC_SCHEME: ${{ 'XQUARE-iOS' }}
      XC_ARCHIVE: ${{ 'XQUARE-iOS.xcarchive' }}

      CERTIFICATION_PASSWORD: ${{ secrets.CERTIFICATION_PASSWORD }}

      ENCRYPTED_CERT_FILE_PATH: ${{ '.github/secrets/Certificates.p12.gpg' }}
      DECRYPTED_CERT_FILE_PATH: ${{ '.github/secrets/Certificates.p12' }}

      ENCRYPTED_PROVISION_FILE_PATH: ${{ '.github/secrets/XQUARE_GithubActions.mobileprovision.gpg' }}
      DECRYPTED_PROVISION_FILE_PATH: ${{ '.github/secrets/XQUARE_GithubActions.mobileprovision' }}

      EXPORT_OPTIONS_PLIST_FILE_PATH: ${{ '.github/secrets/ExportOptions.plist' }}

      KEYCHAIN: ${{ 'test.keychain' }}

    steps:
      - name: Select latest Xcode
        run: "sudo xcode-select -s /Applications/Xcode.app"
      - name: Checkout project
        uses: actions/checkout@v2
      - name: install needs
        run: |
          bash <(curl -Ls https://install.tuist.io)
      - name: Configure Keychain
        run: |
          security create-keychain -p "" "$KEYCHAIN"
          security list-keychains -s "$KEYCHAIN"
          security default-keychain -s "$KEYCHAIN"
          security unlock-keychain -p "" "$KEYCHAIN"
          security set-keychain-settings
      - name : Configure Code Signing
        run: |
          gpg -d -o "$DECRYPTED_CERT_FILE_PATH" --pinentry-mode=loopback --passphrase "$CERTIFICATION_PASSWORD" "$ENCRYPTED_CERT_FILE_PATH"
          gpg -d -o "$DECRYPTED_PROVISION_FILE_PATH" --pinentry-mode=loopback --passphrase "$CERTIFICATION_PASSWORD" "$ENCRYPTED_PROVISION_FILE_PATH"
          
          security import "$DECRYPTED_CERT_FILE_PATH" -k "$KEYCHAIN" -P "$CERTIFICATION_PASSWORD" -A
          security set-key-partition-list -S apple-tool:,apple: -s -k "" "$KEYCHAIN"
          
          mkdir -p "$HOME/Library/MobileDevice/Provisioning Profiles"
          echo `ls .github/secrets/*.mobileprovision`
            for PROVISION in `ls .github/secrets/*.mobileprovision`
            do
              UUID=`/usr/libexec/PlistBuddy -c 'Print :UUID' /dev/stdin <<< $(security cms -D -i ./$PROVISION)`
            cp "./$PROVISION" "$HOME/Library/MobileDevice/Provisioning Profiles/$UUID.mobileprovision"
          done
      - name: Generate project
        run: |
          make generate
      - name: Archive app
        run: |
          xcodebuild clean archive -workspace $XC_WORKSPACE -scheme $XC_SCHEME -configuration release -archivePath $XC_ARCHIVE
      - name: Export app
        run: |
          xcodebuild -exportArchive -archivePath $XC_ARCHIVE -exportOptionsPlist "$EXPORT_OPTIONS_PLIST_FILE_PATH" -exportPath . -allowProvisioningUpdates
      - name: Upload app to TestFlight
        uses: apple-actions/upload-testflight-build@v1
        with:
          app-path: 'XQUARE_iOS.ipa'
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_API_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_API_PRIVATE_KEY }}
